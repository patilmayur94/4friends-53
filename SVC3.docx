// Simple Version Control by '4friends'.
/*
It can better run on 'turbo c'.
commands...
1) add : add new version.
2) svc n : display nth version from first..eg svc 3 will show all three versions
3) del n : it will delete only nth version..
4) exit : to exit the cammand promt

all the cammands are case insensitive...
you need to specify file first suppose "test.txt". Our program will
create one metadata file wrt to "test.txt". eg "metatest.txt"

We are deleting version logically...

Thank you.
*/
#include<stdio.h>
#include<conio.h>
#include<string.h>
#define sz 50

char fname[sz],mname[sz],arr[20][10];
int CV,NL,NV,r,a,b,c,d,e,len[20],n;

void initMeta(char[]);
void addVer();
void editor();
void showVer(int);
void delVer(int);
void upper();

void main()
{
  char *tok1,*tok2,cmd[50];
  clrscr();
  printf("\n\n\t\t\tEnter file name(eg temp.txt) : ");
  gets(cmd);
  initMeta(cmd);
  while(1)
  {
    clrscr();
    printf("\n\n\t\t -------- SVC Command Promt -------- ");
    printf("\n\n  >>");
    gets(cmd);
    upper(cmd);
    if(strcmp(cmd,"ADD") == 0)
	addVer();
    else if(strcmp(cmd,"EXIT") == 0)
	break;
    else
    {
		tok1 = strtok(cmd," ");
		tok2 = strtok(NULL," ");
		upper(tok1);
		if(strcmp(tok1,"SVC") == 0)
			showVer(atoi(tok2));
		else if(strcmp(tok1,"DEL") == 0)
			delVer(atoi(tok2));
		else
			printf("Invalid command or prarameter...");
    }
    getch();
  }
}

void upper(char str[sz])
{
 int i;
 for(i=0; str[i]!='\0'; i++)
	str[i] = toupper(str[i]);
}

void initMeta(char str[50])
{
  FILE *fp1,*fp2;
  strcpy(fname,str);
  strcpy(mname,"meta");
  strcat(mname,str);
  if(!(fopen(fname,"r")))
  {
   fp1 = fopen(fname,"w");
   fp2 = fopen(mname,"w");
   fprintf(fp2,"%d\n",0);
   fprintf(fp2,"%d\n",0);
   fprintf(fp2,"%d\n",0);
  }
  fclose(fp1);
  fclose(fp2);
}

void addVer()
{
  FILE *fp1,*fp2;
  int i,j;

  fp1 = fopen(mname,"r");
  fp2 = fopen("tempmeta.txt","w");

  fscanf(fp1,"%d",&CV);
  fscanf(fp1,"%d",&NL);
  fscanf(fp1,"%d",&NV);

  fprintf(fp2,"%d\n",CV+1);
  fprintf(fp2,"%d\n",NL+n);
  fprintf(fp2,"%d\n",NV+1);

  printf("\n\nVer %d (Note : press Esc to exi)",CV+1);
  editor();

  while(!feof(fp1))
  {
    r = fscanf(fp1,"%d%d%d%d%d",&a,&b,&c,&d,&e);
    if(r > 0)
	fprintf(fp2,"%d %d %d %d %d\n",a,b,c,d,e);
  }

  fprintf(fp2,"%d %d %d %d %d\n",CV+1,n,NL+1,NL+n,1);

  fclose(fp1);
  fclose(fp2);

  if(remove(mname)==0)
  {
	if(rename("tempmeta.txt",mname) == 0 )
		printf("\n\n(Version Saved)");
	else
		printf("\n\n\t\t\t Error in renaming file..");
  }
  else
  {
	printf("\n\n\t\t\t Error while deleting file...");
  }

  fp2 = fopen(fname,"a");
  for(i=0; i<n; i++)
  {
     for(j=0; j<=len[i]; j++)
     {
       fputc(arr[i][j],fp2);
     }
  }
  fclose(fp2);
}

void editor()
{
   int i=0,j=0,ch,flag=0,m=0;
   int x,y;
   // Code for generating array which is copied directly to the file,
   // as a new version.
   printf("\n\n");

   while(1)
   {
    ch = getch();
    switch(ch)
    {
     case 13 : if(j!=0)   // u cant enter empty line...
		flag=2;
	       break;
     case 27 : flag=1;
	       break;
     case 8  : if(i!=0 || j!=0)
	       {
		y = wherey();
		if(j==0)
		{
		 i--;
		 j=len[i];
		 gotoxy(j,--y);
		 printf(" ");
		 gotoxy(j,y);
		 j--;
		}
		else
		{
		 x = wherex();
		 gotoxy(--x,y);
		 printf(" ");
		 gotoxy(x,y);
		 j--;
		}
	       }
	       break;
     default : arr[i][j++] = ch;
	       printf("%c",arr[i][j-1]);
    }
    if(j==9 || flag==2)
    {
     len[i]=j;
     arr[i++][j] = '\n';
     j = 0;
     y = wherey();
     gotoxy(1,++y);
     flag = 0;
    }
    if(flag == 1 || i==21)
    {
	len[i]=j;
	arr[i++][j] = '\n';
	break;
    }
   }
   n = i;
   /*	Display Routine...
   clrscr();
   printf("\n\n\t\t\t");
   for(i=0; i<n; i++)
   {
     for(j=0; j<=len[i]; j++)
     {
       printf("%c",arr[i][j]);
     }
     printf("\t\t\t");
   }
   */
}

void showVer(int v)
{
  FILE *fp1,*fp2;
  char ch;
  int t;

  fp1 = fopen(mname,"r");
  fp2 = fopen(fname,"r");

  fscanf(fp1,"%d",&CV);
  fscanf(fp1,"%d",&NL);
  fscanf(fp1,"%d",&NV);

  printf("\n\n");

  if(v <= CV)
  {
	while(!feof(fp1))
	{
		r = fscanf(fp1,"%d%d%d%d%d",&a, &b, &c, &d, &e);
		if(r>0)
		{
		  if(e==1 && a<=v)
		  {
		    printf("Ver %d:\n",a);
		    for(t = c; t <= d; t++)
		    {
			printf("\t");
			while(1)
			{
			  ch = fgetc(fp2);
			  printf("%c",ch);
			  if(ch == '\n')
				break;
			}
		    }
		  }
		  else
		  {
		    for(t = c; t <= d; t++)
		    {
			while(1)
			{
			  ch = fgetc(fp2);
			  if(ch == '\n')
				break;
			}
		    }
		  }
		}
	}
  }
  else
  {
	printf("\n\nnot a valid version....");
  }
  fclose(fp1);
  fclose(fp2);
}

void delVer(int v)
{
  FILE *fp1,*fp2;
  int flag = 0;
  fp1 = fopen(mname,"r");
  fp2 = fopen("tempmeta.txt","w");

  fscanf(fp1,"%d",&CV);
  fscanf(fp1,"%d",&NL);
  fscanf(fp1,"%d",&NV);

  if(v <= CV)
  {
    while(!feof(fp1))
    {
	r = fscanf(fp1,"%d%d%d%d%d",&a, &b, &c, &d, &e);
	if(r > 0)
	{
	  if(a==v && e==1)
	  {
	    fprintf(fp2,"%d %d %d %d 0\n",a,b,c,d);
	    printf("\n\nVersion Successfully deleted...");
	    NV--;
	    NL-=b;
	    flag = 1;
	  }
	  else
	    fprintf(fp2,"%d %d %d %d %d\n",a,b,c,d,e);
	}
    }
    if(flag == 0)
	printf("\n\nno version found...");
   }
   else
   {
	printf("\n\ninvalid version....");
   }
   fclose(fp1);
   fclose(fp2);

   fp2 = fopen(mname,"w");
   fp1 = fopen("tempmeta.txt","r");

   fprintf(fp2,"%d\n",CV);
   fprintf(fp2,"%d\n",NL);
   fprintf(fp2,"%d\n",NV);

   while(!feof(fp1))
   {
	r = fscanf(fp1,"%d%d%d%d%d",&a, &b, &c, &d, &e);
	if(r > 0)
	{
	    fprintf(fp2,"%d %d %d %d %d\n",a,b,c,d,e);
	}
   }

   fclose(fp1);
   fclose(fp2);

   if(remove("tempmeta.txt")!=0)
	printf("\n\n\t\t\t Error while deleting file...");
}
